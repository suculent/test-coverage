/Users/deleted/Desktop/SB/01 - Prep/XCode/UIPasteboard/UIPasteboard/AppDelegate.swift:
    1|       |//
    2|       |//  AppDelegate.swift
    3|       |//  UIPasteboard
    4|       |//
    5|       |//  Created by This is Terminator on 16/01/2019.
    6|       |//  Copyright © 2019 Deleted. All rights reserved.
    7|       |//
    8|       |
    9|       |import UIKit
   10|       |
   11|       |@UIApplicationMain
   12|       |class AppDelegate: UIResponder, UIApplicationDelegate {
   13|       |
   14|       |    var window: UIWindow?
   15|       |
   16|       |
   17|      5|    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
   18|      5|        return true
   19|      5|    }
   20|      5|
   21|       |    func applicationDidBecomeActive(_ application: UIApplication) {
   22|      0|        let notificationName = Notification.Name("applicationDidBecomeActive")
   23|      0|        NotificationCenter.default.post(name: notificationName, object: nil)
   24|      0|    }
   25|      0|        
   26|       |}
   27|      0|

/Users/deleted/Desktop/SB/01 - Prep/XCode/UIPasteboard/UIPasteboard/ViewController.swift:
    1|       |//
    2|       |//  ViewController.swift
    3|       |//  UIPasteboard
    4|       |//
    5|       |//  Created by This is Terminator on 16/01/2019.
    6|       |//  Copyright © 2019 Deleted. All rights reserved.
    7|       |//
    8|       |
    9|       |import UIKit
   10|       |import SlackKit
   11|       |
   12|       |class ViewController: UIViewController {
   13|       |    
   14|       |    // WARNING! This is bad practice. Never store credentials in the code!
   15|      5|    let CLIENT_ID = "15022900897.524438636529"
   16|      5|    let CLIENT_SECRET = "a2127114d7a50e7c69117871825e469c"
   17|      5|    let ACCESS_TOKEN = "xoxb-15022900897-524887091476-6nZhBU41C0zhaSYoIMEZfYDm"
   18|       |    
   19|      5|    var something = false;
   20|      5|    
   21|      5|    var last = ""
   22|      5|    
   23|       |    let verdicts: [String:Bool] = [
   24|      0|        "Mr. Roboto" : false,
   25|      0|        "Service Kiosks": false,
   26|      0|        "Darth Vader": false,
   27|      0|        "K-9": true,
   28|      0|        "Emotions": false,
   29|      0|        "Self-Driving Cars": false,
   30|      0|        "Telepresence Robots": false,
   31|      0|        "Roomba": true,
   32|      0|        "Assembly-Line Robot": false,
   33|      0|        "ASIMO": false,
   34|      0|        "KITT": false,
   35|      0|        "USS Enterprise": false,
   36|      0|        "Transformers": true,
   37|      0|        "Jaegers": false,
   38|      0|        "The Major": false,
   39|      0|        "Siri": false,
   40|      0|        "The Terminator": true,
   41|      0|        "Commander Data": false,
   42|      0|        "Marvin the Paranoid Android": true,
   43|      0|        "Pinocchio": false,
   44|      0|        "Droids": true,
   45|      0|        "Hitchbot": false,
   46|      0|        "Mars Rovers": false,
   47|      0|        "Space Probes": false,
   48|      0|        "Sasquatch": false,
   49|      0|        "Toaster": false,
   50|      0|        "Toaster Oven": false,
   51|      0|        "Cylons": false,
   52|      0|        "V'ger": true,
   53|      0|        "Ilia Robot": false,
   54|      0|        "The TARDIS": false,
   55|      0|        "Johnny 5": true,
   56|      0|        "Twiki": true,
   57|       |        "Dr. Theopolis": false,
   58|      5|        "robots.txt": false,
   59|      5|        "Lobot": false,
   60|      5|        "Vicki": true,
   61|      5|        "GlaDOS": false,
   62|      5|        "Turrets": true,
   63|      5|        "Wheatley": true,
   64|      5|        "Herbie the Love Bug": false,
   65|      5|        "Iron Man": false,
   66|      5|        "Ultron": false,
   67|      5|        "The Vision": false,
   68|      5|        "Clockwork Droids": false,
   69|      5|        "Podcasts": false,
   70|      5|        "Cars": false,
   71|      0|        "Swimming Pool Cleaners": false,
   72|      5|        "Burritos": false,
   73|      5|        "Prince Robot IV": false,
   74|      5|        "Daleks": false,
   75|      0|        "Cybermen": false,
   76|      5|        "The Internet of Things": false,
   77|      5|        "Nanobots": true,
   78|      5|        "Two Intermeshed Gears": false,
   79|      0|        "Crow T. Robot": true,
   80|      5|        "Tom Servo": true,
   81|      5|        "Thomas and Friends": false,
   82|      5|        "Replicants": false,
   83|      5|        "Chatbots": false,
   84|      5|        "Agents": false,
   85|      5|        "Lego Simulated Worm Toy": true,
   86|       |        "Ghosts": false,
   87|       |        "Exos": true,
   88|       |        "Rasputin": false,
   89|       |        "Tamagotchi": false,
   90|       |        "T-1000": true,
   91|       |        "The Tin Woodman": false,
   92|       |        "Mic N. The Robot": true,
   93|       |        "Robot Or Not Bot": false
   94|       |    ]
   95|       |    
   96|       |    var bot = SlackKit()
   97|       |
   98|       |    override func viewDidLoad() {
   99|       |        super.viewDidLoad()
  100|       |        initSlack()
  101|       |        
  102|       |        let notificationName = Notification.Name("applicationDidBecomeActive")
  103|       |        NotificationCenter.default.addObserver(forName: notificationName, object: nil, queue: OperationQueue.main) { (Notification) in
  104|       |            print("Sending pasteboard on applicationDidBecomeActive notification...")
  105|       |            self.sendPasteboard()
  106|       |        }
  107|       |        
  108|       |        NotificationCenter.default.addObserver(forName: UIPasteboard.changedNotification, object: nil, queue: OperationQueue.main) { (Notification) in
  109|       |            print("Sending pasteboard on change notification...")
  110|       |            self.sendPasteboard()
  111|       |        }
  112|       |    }
  113|       |    
  114|       |    deinit {
  115|       |        let notificationName = Notification.Name("applicationDidBecomeActive")
  116|       |        NotificationCenter.default.removeObserver(self, name: notificationName, object: nil)
  117|       |    }
  118|       |    
  119|       |    func initSlack() {
  120|       |        
  121|       |        bot = SlackKit()
  122|       |        bot.addRTMBotWithAPIToken(ACCESS_TOKEN)
  123|       |        bot.addWebAPIAccessWithToken(ACCESS_TOKEN)
  124|       |        
  125|       |        //let oauthConfig = OAuthConfig(clientID: CLIENT_ID, clientSecret: CLIENT_SECRET)
  126|       |        //bot.addServer(oauth: oauthConfig)
  127|       |        
  128|       |        bot.notificationForEvent(.message) { [weak self] (event, client) in
  129|       |            guard
  130|       |                let message = event.message,
  131|       |                let id = client?.client?.authenticatedUser?.id,
  132|       |                message.text?.contains(id) == true
  133|       |                else {
  134|       |                    return
  135|       |            }
  136|       |            self?.handleMessage(message)
  137|       |        }
  138|       |    }
  139|       |    
  140|       |    // MARK: Bot logic
  141|       |    private func handleMessage(_ message: Message) {
  142|       |        if let text = message.text?.lowercased(), let timestamp = message.ts, let channel = message.channel {
  143|       |            for (robot, verdict) in verdicts {
  144|       |                let lowerbot = robot.lowercased()
  145|       |                if text.contains(lowerbot) {
  146|       |                    let reaction = verdict ? "robot_face" : "no_entry_sign"
  147|       |                    bot.webAPI?.addReactionToMessage(name: reaction, channel: channel, timestamp: timestamp, success: nil, failure: nil)
  148|       |                    return
  149|       |                }
  150|       |            }
  151|       |            // Not found
  152|       |            bot.webAPI?.addReactionToMessage(name: "question", channel: channel, timestamp: timestamp, success: nil, failure: nil)
  153|       |            return
  154|       |        }
  155|       |    }
  156|       |    
  157|       |    override func viewDidAppear(_ animated: Bool) {
  158|       |        super.viewDidAppear(animated)
  159|       |        sendPasteboard()
  160|       |        print("Sending pasteboard on viewDidAppear...")
  161|       |    }
  162|       |
  163|       |    func untestableExample(_ animated: Bool) {
  164|       |        
  165|       |        super.viewDidAppear(animated)
  166|       |        
  167|       |        // Causes example of code uncovered by tests (something will be always false)
  168|       |        if (something) { return }
  169|       |        
  170|       |        // This branch of code will never be tested.
  171|       |        
  172|       |        let pasteboard = UIPasteboard.general
  173|       |        pasteboard.string = "#@©|<3∆"
  174|       |        pasteboard.url = URL(string: "https://rtm.thinx.cloud")
  175|       |        pasteboard.image = UIImage()
  176|       |        pasteboard.color = UIColor.red
  177|       |        
  178|       |        if pasteboard.hasStrings {
  179|       |            print("The pasteboard has Strings!")
  180|       |        }
  181|       |        
  182|       |        if pasteboard.hasURLs {
  183|       |            print("The pasteboard has URLs!")
  184|       |        }
  185|       |        
  186|       |        if pasteboard.hasImages {
  187|       |            print("The pasteboard has images!")
  188|       |        }
  189|       |        
  190|       |        if pasteboard.hasColors {
  191|       |            print("The pasteboard has colors!")
  192|       |        }
  193|       |        
  194|       |        readPasteboard();
  195|       |    }
  196|       |    
  197|       |    // Used by test only, otherwise deprecated.
  198|       |    func readPasteboard() {
  199|       |        
  200|       |        // Setup, let's put some stuff in the UIPasteboard
  201|       |        
  202|       |        let pasteboard = UIPasteboard.general
  203|       |        pasteboard.string = "#@©|<3∆"
  204|       |        
  205|       |        // Understanding the UIPasteboard contents
  206|       |        
  207|       |        if pasteboard.hasStrings {
  208|       |            print("The pasteboard has String: \(pasteboard.string!)")
  209|       |            sendSlack(string: pasteboard.string!)
  210|       |        }
  211|       |        
  212|       |        pasteboard.url = URL(string: "https://rtm.thinx.cloud")
  213|       |        
  214|       |        if pasteboard.hasURLs {
  215|       |            print("The pasteboard has URLs!")
  216|       |        }
  217|       |        
  218|       |        pasteboard.image = UIImage()
  219|       |        
  220|       |        if pasteboard.hasImages {
  221|       |            print("The pasteboard has images!")
  222|       |        }
  223|       |        
  224|       |        pasteboard.color = UIColor.red
  225|       |        
  226|       |        if pasteboard.hasColors {
  227|       |            print("The pasteboard has colors!")
  228|       |        }
  229|       |    }
  230|       |    
  231|       |    func sendSlack(string: String) {
  232|       |        if last != string {
  233|       |            print("String already sent, deduplicating...")
  234|       |        } else {
  235|       |            bot.webAPI?.sendMessage(channel: "#slackit", text: string, success: { (arg0) in
  236|       |                // code
  237|       |                print("Slack message sent.")
  238|       |                self.last = string
  239|       |            }, failure: { (error: SlackError) in
  240|       |                print(error.localizedDescription)
  241|       |                print("Slack message failed.")
  242|       |            })
  243|       |        }
  244|       |    }
  245|       |
  246|       |    func sendPasteboard() {
  247|       |        let pasteboard = UIPasteboard.general
  248|       |        if pasteboard.hasStrings {
  249|       |            if let aString = pasteboard.string {
  250|       |                print("The pasteboard has String: \(aString)")
  251|       |                sendSlack(string: aString)
  252|       |            }
  253|       |        } else {
  254|       |            print("Not found a string to send.")
  255|       |        }
  256|       |    }
  257|       |
  258|       |}
  259|       |

